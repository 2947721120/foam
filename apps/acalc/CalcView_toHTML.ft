<div class="edge-top"></div>
<div class="edge"></div>
<div id="%%id" class="calc">
  <div class="calc-display">
    <div class="inner-calc-display">
      <foam f="history">
        <div class="history">
          {{this.data.op}} {{this.data.a2}}
          <% if ( this.data.op.toString() ) { %><hr><% } %>
        </div>
      </foam>
      $$row1{mode: 'read-only', escapeHTML: false}
    </div>
  </div>
  <div class='keypad'>
  <div class="edge2"></div>
  <foam model="SlidePanelView" minWidth="360" minPanelWidth="400" panelRatio="0.4">
    <mainView>
      <div id="%%id" class="buttons button-row">
        <div class="button-column" style="flex-grow: 3">
          <div class="button-row">
            <div class="button">$$7</div><div class="button">$$8</div><div class="button">$$9</div>
          </div>
          <div class="button-row">
            <div class="button">$$4</div><div class="button">$$5</div><div class="button">$$6</div>
         </div>
          <div class="button-row">
            <div class="button">$$1</div><div class="button">$$2</div><div class="button">$$3</div>
          </div>
          <div class="button-row">
            <div class="button">$$point</div><div class="button">$$0</div><div class="button">$$equals</div>
          </div>
        </div>
      <%
      this.X.registerModel(CalcButton.xbind({
        background: '#777', width: 70, height: 70
      }), 'ActionButton');
      %>
        <div class="button-column rhs-ops" style="flex-grow: 1">
          <div class="button">$$ac</div>
          <div class="button">$$plus</div>
          <div class="button">$$minus</div>
          <div class="button">$$div</div>
          <div class="button">$$mult</div>
        </div>
      </div>
    </mainView>
    <panelView>
      <div id="%%id"><foam model="SlidePanelView" minWidth="360" minPanelWidth="100" panelRatio="0.2">
        <mainView>
          <%
          this.X.registerModel(CalcButton.xbind({
            background: 'rgb(64, 189, 158)',
            width:  100,
            height: 58,
            font:   '20px Roboto'
          }), 'ActionButton');
          %>
          <div id="%%id" class="buttons button-row secondaryButtons">
            <div class="button-column" style="flex-grow: 1">
              <div class="button-row">
                <div class="button">$$inv</div><div class="button">$$square</div><div class="button">$$sqroot</div>
              </div>
              <div class="button-row">
                <div class="button">$$log</div><div class="button">$$pow</div><div class="button">$$root</div>
              </div>
              <div class="button-row">
                <div class="button">$$ln</div><div class="button">$$exp</div><div class="button">$$e</div>
              </div>
              <div class="button-row">
                <div class="button">$$sin </div><div class="button">$$cos</div><div class="button">$$tan</div>
              </div>
              <div class="button-row">
                <div class="button">$$asin</div><div class="button">$$acos</div><div class="button">$$atan</div>
              </div>
              <div class="button-row">
                <div class="button">$$sign</div><div class="button">$$percent</div><div class="button">$$pi</div>
              </div>
            </div>
          </div>
        </mainView>
        <panelView>
          <%
          this.X.registerModel(this.X.ActionButton.xbind({
            width: 70,
            height: 70,
            color:      'rgb(119, 119, 119)',
            background: 'rgb(29, 233, 182)',
            font:       '18px Roboto'
          }), 'ActionButton');
          %>
          <div id="%%id" class="buttons button-row tertiaryButtons">
            <div class="button-column" style="flex-grow: 1">
              <div class="button-row"><div class="button">$$deg</div></div>
              <div class="button-row"><div class="button">$$rad</div></div>
              <div class="button-row"><div class="button">$$fact</div></div>
              <div class="button-row"><div class="button">$$p</div></div>
              <div class="button-row"><div class="button">$$c</div></div>
            </div>
          </div>
        </panelView>
      </foam></div>
    </panelView>
  </foam>
  </div>
</div>
<%
  // This block causes the calc-display to scroll when updated.
  // To remove this feature replace the .inner-calc-display 'transition:' and
  // 'top:' styles with 'bottom: 0'.
  var move = EventService.framed(function() {
    if ( ! this.$ ) return;
    var outer$ = this.$.querySelector('.calc-display');
    var inner$ = this.$.querySelector('.inner-calc-display');
    var outer  = window.getComputedStyle(outer$);
    var inner  = window.getComputedStyle(inner$);
    // TODO(kgr): where does the 11 come from?
    inner$.style.top = toNum(outer.height)-toNum(inner.height)-11 + 'px';

  }.bind(this));
  Events.dynamic(function() { this.data.op; this.data.a1; this.data.a2; }.bind(this), move);
  this.data.history.listen(move);
  this.X.window.addEventListener('resize', move);
%>
