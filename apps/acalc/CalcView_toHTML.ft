<div style="position: relative;z-index: 100;">
  <div style="position: absolute;">
    <span style="top: 5;left: 0;position: absolute;" id="<%= this.setClass('active', function() { return ! this.data.degreesMode; }) %>" class="rad">RAD</span>
    <span style="top: 5;left: 0;position: absolute;" id="<%= this.setClass('active', function() { return   this.data.degreesMode; }) %>" class="deg">DEG</span>
  </div>
</div>

<div class="edge"></div>
<div id="%%id" class="calc">
  <div class="calc-display">
    <div class="inner-calc-display">
      $$history{ rowView: 'HistoryCitationView' }
      $$row1{mode: 'read-only', escapeHTML: false}
    </div>
  </div>
  <div class='keypad'>
  <div class="edge2"></div>
  <%= this.SlidePanelView.create({
    minWidth: 360,
     minPanelWidth: 400,
     panelRatio: 0.4,
     mainView: 'MainButtonsView',
     panelView: {
       factory_: 'SlidePanelView',
       minWidth: 360,
       minPanelWidth: 140,
       panelRatio: 0.2,
       mainView: 'SecondaryButtonsView',
       panelView: 'TertiaryButtonsView'
     }
   }) %>
  </div>
</div>
<%
  // This block causes the calc-display to scroll when updated.
  // To remove this feature replace the .inner-calc-display 'transition:' and
  // 'top:' styles with 'bottom: 0'.
  var move = EventService.framed(EventService.framed(function() {
    if ( ! this.$ ) return;
    var outer$ = this.$.querySelector('.calc-display');
    var inner$ = this.$.querySelector('.inner-calc-display');
    inner$.style.top = outer$.clientHeight - inner$.clientHeight-11;
  }.bind(this)));
  Events.dynamic(function() { this.data.op; this.data.history; this.data.a1; this.data.a2; }.bind(this), move);
  this.X.window.addEventListener('resize', move);
  // Add mousewhell scrolling.
  this.X.document.addEventListener('mousewheel', EventService.framed(function(e) {
console.log('e: ', e);
    var inner$ = self.$.querySelector('.inner-calc-display');
    var outer$ = self.$.querySelector('.calc-display');
    var outer  = window.getComputedStyle(outer$);
    var inner  = window.getComputedStyle(inner$);
    var top    = toNum(inner$.style.top);
console.log('top: ', top);
    inner$.style.top = Math.min(0, Math.max(toNum(outer.height)-toNum(inner.height)-11, top-e.deltaY)) + 'px';
  }));
%>
